openapi: 3.0.1
info:
  title: CRM API for billing system
  description: API документация для CRM биллингового сервиса
  version: 1.0.0
servers:
  - url: http://localhost:8083
tags:
  - name: Auth Controller
    description: API для регистрации и авторизации (JWT)
  - name: Subscriber Controller
    description: API для управления счетом абонентов
  - name: Manager Controller
    description: API для управления абонентами
paths:
  /api/manager/save:
    post:
      tags:
        - Manager Controller
      operationId: save
      description: Добавление нового абонента в базу
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Abonent'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Client'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessage'
                  - $ref: '#/components/schemas/ValidationErrorResponse'
                  - $ref: '#/components/schemas/Violation'
  /api/auth/registration:
    post:
      tags:
        - Auth Controller
      operationId: registration
      description: Регистрация нового абонента
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessage'
                  - $ref: '#/components/schemas/ValidationErrorResponse'
                  - $ref: '#/components/schemas/Violation'
  /api/auth/login:
    post:
      tags:
        - Auth Controller
      operationId: login
      description: Авторизация клиента для получения JWT-токена
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JwtResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessage'
                  - $ref: '#/components/schemas/ValidationErrorResponse'
                  - $ref: '#/components/schemas/Violation'
  /api/subscriber/pay:
    patch:
      tags:
        - Subscriber Controller
      operationId: pay
      description: Пополнение баланса абонента
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Payment'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Client'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessage'
                  - $ref: '#/components/schemas/ValidationErrorResponse'
                  - $ref: '#/components/schemas/Violation'
  /api/manager/change-tariff:
    patch:
      tags:
        - Manager Controller
      operationId: changeTariff
      description: Смена тарифа абонента
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangeTariff'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Client'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorMessage'
                  - $ref: '#/components/schemas/ValidationErrorResponse'
                  - $ref: '#/components/schemas/Violation'
components:
  schemas:
    Abonent:
      required:
        - tariffId
        - msisdn
      type: object
      properties:
        msisdn:
          pattern: ^(7|8)\d{11}$
          type: string
          description: Номер телефона абонента
          example: 78005553535
        tariffId:
          type: string
          description: Тариф абонента
          example: 12
        money:
          type: number
          description: Баланс абонента
          example: 550.00
    Payment:
      required:
        - money
        - msisdn
      type: object
      properties:
        msisdn:
          pattern: ^(7|8)\d{11}$
          type: string
          description: Номер телефона абонента
          example: 79079765785
        money:
          type: number
          example: 500.00
          description: Сумма пополнения баланса
    ChangeTariff:
      required:
        - tariffId
        - msisdn
      type: object
      properties:
        msisdn:
          pattern: ^(7|8)\d{11}$
          type: string
          description: Номер телефона абонента
          example: 79079765785
        tariffId:
          type: string
          description: Новый тариф абонента
          example: 12
    Client:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        phoneNumber:
          type: string
          example: 78005553535
        tariff:
          type: string
          enum:
            - PER_MINUTE
            - MONTHLY
        balance:
          type: number
          example: 550.00
    RegisterRequest:
      required:
        - username
        - password
      type: object
      properties:
        username:
          type: string
          example: 78005553535
        password:
          type: string
          example: password
    LoginRequest:
      required:
        - username
        - password
      type: object
      properties:
        username:
          type: string
          example: 79079765785
        password:
          type: string
          example: password
    JwtResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        token:
          type: string
          example: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI3OTA3OTc2NTc4NSIsInJvbGVzIjpbIlVTRVIiXSwiaWF0IjoxNzE1NDU2Mjg1LCJleHAiOjE3MTU0NTk4ODV9.DXztq6ss5di9WuKrsKZdyaCoZw7uNhsNnvzvvqNI58s
        username:
          type: string
          example: 78005553535
        roles:
          type: array
          items:
            $ref: '#/components/schemas/Role'
    Role:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        name:
          type: string
          enum:
            - USER
            - ADMIN
    ValidationErrorResponse:
      type: object
      properties:
        violations:
          type: array
          items:
            $ref: '#/components/schemas/Violation'
    Violation:
      type: object
      properties:
        field:
          type: string
        message:
          type: string
    ErrorMessage:
      type: object
      properties:
        id:
          type: string
          format: uuid
        message:
          type: string